# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master, development]
  pull_request:
    branches: [main, master, development]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          #- {os: macOS-latest, r: 'devel', rtools: ''}
          #- {os: macOS-latest, r: 'release', rtools: ''}
          #- {os: windows-latest, r: 'devel', rtools: '45'}
          #- {os: windows-latest, r: 'release', rtools: '45'}
          - {os: ubuntu-24.04, r: 'devel', rtools: ''}
          - {os: ubuntu-24.04, r: 'release', rtools: ''}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      NOT_CRAN: true

    steps:
      - name: cmdstan env vars
        run: |
          echo "CMDSTAN_PATH=${HOME}/.cmdstan" >> $GITHUB_ENV
        shell: bash
      - uses: n1hility/cancel-previous-runs@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2.8.7
        with:
          r-version: ${{ matrix.config.r }}
          rtools-version: ${{ matrix.config.rtools }}
          use-public-rspm: true
      - uses: r-lib/actions/setup-pandoc@v2.8.7

      # packages that are needed for R CMD CHECK
      - uses: r-lib/actions/setup-r-dependencies@v2.8.7
        with:
          cache-version: 3
          extra-packages: |
            XML
            stan-dev/cmdstanr
            topipa/iwmm
            rcmdcheck
            rstan
            checkmate
            jsonlite
            posterior
            processx
            R6
            BH
            RcppEigen
            StanHeaders
            RcppParallel
            withr
            testthat
            rmarkdown
            knitr
            any::XML
            any::textshaping

      - name: Install cmdstan
        run: |
          cmdstanr::check_cmdstan_toolchain(fix = TRUE)
          cmdstanr::install_cmdstan(cores = 2)
        shell: Rscript {0}

      - name: check
        env:
          _R_CHECK_CRAN_INCOMING_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}
